---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import { imageMetadata } from "astro/assets/utils";

import "../styles/spin.css";

import github from "../assets/icons/github-white.svg";
import linkIcon from "../assets/icons/arrow-right-up.svg";

interface Props {
  title: string;
  description: string;
  imgSrc: string;
  repository: string;
  index: number;
  technologies: technologies[];
}
interface technologies {
  title: string;
  src: string;
}
const { title, description, imgSrc, technologies, repository } = Astro.props;
const icons = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/icons/*.{jpeg,jpg,png,svg}"
);
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/*.{jpeg,jpg,png,svg}"
);

const delayClasses = ["delay-200", "delay-600", "delay-1200"];

const delayClass = delayClasses[Astro.props.index];
---

<div
  class={`rounded-xl p-3 bg-violet-500 text-zinc-100 max-w-80 w-full transition-all ${delayClass} duration-500 animate-scroll opacity-1 -on-scroll:opacity-1 translate-y-20 -on-scroll:translate-y-20 blur-2xl -on-scroll:blur-2xl`}
>
  <div class="relative">
    <Image
      src={images[imgSrc]()}
      alt={title}
      class="max-h-full max-w-full h-50 object-cover mt-3 rounded-xl"
      loading="lazy"
    />
    <a
      href={repository}
      target="_blank"
      rel="noopener noreferrer"
      class="absolute hover-sping -bottom-3 -right-3 cursor-pointer hover:scale-90"
    >
      <div class="relative bg-zinc-900 p-2 rounded-full size-20">
        <Image
          src={github}
          alt="github logo"
          class="github-icon"
          loading="lazy"
        />
        <Image
          src={linkIcon}
          alt="link icon"
          class="arrow-icon absolute inset-0 m-auto size-[75%]"
          loading="lazy"
        />
      </div>
      <svg
        viewBox="0 0 800 800"
        xmlns="http://www.w3.org/2000/svg"
        class="opacity-0 loading-img transition-opacity absolute top-[calc(50%-(9.5rem/2))] left-[calc(50%-(9.5rem/2))] size-38"
      >
        <circle
          class="spin2"
          cx="400"
          cy="400"
          fill="none"
          r="200"
          stroke-width="25"
          stroke="#ffffff"
          stroke-dasharray="938 1400"
          stroke-linecap="round"></circle>
      </svg>
    </a>
  </div>
  <h3 class="text-3xl font-bold mt-3">{title}</h3>
  <p>{description}</p>
  <div class="flex justify-evenly">
    {
      technologies.map((technology) => (
        <Image
          src={icons[technology.src]()}
          alt={technology.title}
          title={technology.title}
          class="max-h-10 object-contain max-w-10"
          loading="lazy"
        />
      ))
    }
  </div>
</div>
